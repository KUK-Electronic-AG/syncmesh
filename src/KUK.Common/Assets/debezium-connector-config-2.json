{
  "name": "new-to-old-connector",
    "config": {
        "connector.class": "io.debezium.connector.postgresql.PostgresConnector",
        "tasks.max": "1",
        "database.hostname": "host.docker.internal",
        "database.port": "5440",
        "database.user": "debezium",
        "database.password": "debeziumpassword",
        "database.serverTimezone": "Europe/Warsaw",
        "database.connectionTimeZone": "Europe/Warsaw",
        "serverTimezone": "Europe/Warsaw",
        "connectionTimeZone": "Europe/Warsaw",
        "database.server.id": "1",
        "database.dbname": "db_chinook2",
        "database.server.name": "db_chinook2_kafka",
        "table.include.list": "public.CustomerOutbox,public.InvoiceOutbox,public.InvoiceLineOutbox,public.AddressOutbox",
        "table.whitelist": "public.CustomerOutbox,public.InvoiceOutbox,public.InvoiceLineOutbox,public.AddressOutbox",
        "schema.include.list": "public",
        "bootstrap.servers": "kafka:9092",
        "transforms": "unwrap,route",
        "transforms.unwrap.type": "io.debezium.transforms.ExtractNewRecordState",
        "transforms.unwrap.add.fields": "op,source.ts_ms,source.table,source.name",
        "transforms.unwrap.delete.handling.mode": "rewrite",
        "transforms.route.type": "org.apache.kafka.connect.transforms.RegexRouter",
        "transforms.route.regex": ".*",
        "transforms.route.replacement": "new_to_old.db_chinook2",
        "topic.prefix": "new_to_old",
        "topic.creation.enable": "false",
        "topic.creation.default.replication.factor": 1,
        "topic.creation.default.partitions": 10,
        "topic.creation.default.cleanup.policy": "compact",
        "topic.creation.default.compression.type": "lz4",
        "topic.creation.groups": "routeGroup",
        "topic.creation.group.routeGroup.include": "new_to_old.db_chinook2",
        "topic.creation.group.routeGroup.replication.factor": 1,
        "topic.creation.group.routeGroup.partitions": 10,
        "topic.creation.group.routeGroup.cleanup.policy": "compact",
        "topic.creation.group.routeGroup.compression.type": "lz4",
        "database.allowPublicKeyRetrieval": "true",
        "database.useSSL": "false",
        "schema.history.internal.kafka.bootstrap.servers": "kafka:9092",
        "schema.history.internal.kafka.topic": "schema-changes.db_chinook2",
        "request.timeout.ms": "30000",
        "database.history.kafka.topic": "schema-changes.db_chinook2",
        "database.history.kafka.bootstrap.servers": "kafka:9092",
        "database.history.consumer.ssl.endpoint.identification.algorithm": "https",
        "database.history.producer.ssl.endpoint.identification.algorithm": "https",
        "group.id": "connect-debezium-group",
        "config.storage.topic": "debeziumconfigs",
        "offset.storage.topic": "debeziumoffsets",
        "status.storage.topic": "debeziumstatus",
        "config.storage.replication.factor": 3,
        "offset.storage.replication.factor": 3,
        "status.storage.replication.factor": 3,
        "rest.advertised.host.name": "connect",
        "offset.flush.interval.ms": 10000,
        "internal.key.converter": "org.apache.kafka.connect.json.JsonConverter",
        "internal.value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "internal.key.converter.schemas.enable": false,
        "internal.value.converter.schemas.enable": false,
        "key.converter": "org.apache.kafka.connect.json.JsonConverter",
        "value.converter": "org.apache.kafka.connect.json.JsonConverter",
        "key.converter.schemas.enable": false,
        "value.converter.schemas.enable": false,
        "snapshot.mode": "initial",
        "logging.level": "INFO",
        "config.providers": "env",
        "config.providers.env.class": "org.apache.kafka.common.config.provider.EnvVarConfigProvider",
        "decimal.handling.mode": "precise",
        "column.propagate.source.type": true,
        "plugin.name": "pgoutput",
        "publication.autocreate.mode": "disabled",
        "publication.name": "dbz_publication",
        "slot.name": "debezium"
    }
}
